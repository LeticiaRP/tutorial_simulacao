<?xml version="1.0" ?>
<sdf version="1.10">
    <world name="car_world">

        <!-- The physics tag specifies the type and properties of the dynamic engine -->
        <physics name="1ms" type="ignored">
            <max_step_size>0.001</max_step_size>
            <real_time_factor>1.0</real_time_factor>
        </physics>

        <!-- This plugin simulate the dynamics of the world -->
        <plugin
            filename="gz-sim-physics-system"
            name="gz::sim::systems::Physics">
        </plugin>

        <!-- This plugin is responsible for creating models, moving models, deleting them and many other user commands. -->
        <plugin
            filename="gz-sim-user-commands-system"
            name="gz::sim::systems::UserCommands">
        </plugin>

        <!-- This plugin shows our world scene -->
        <plugin
            filename="gz-sim-scene-broadcaster-system"
            name="gz::sim::systems::SceneBroadcaster">
        </plugin>


        <!-- Add this plugin for use the imu in the simulation -->
        <plugin 
            filename="gz-sim-imu-system"
            name="gz::sim::systems::Imu">
        </plugin>

        <!-- Add this plugin for use the contact sensor in simulation -->
        <plugin 
            filename="gz-sim-contact-system"
            name="gz::sim::systems::Contact">
        </plugin>

        <!-- Add this plugin for use the LiDAR sensor in the simulation  -->
        <plugin
            filename="gz-sim-sensors-system"
            name="gz::sim::systems::Sensors">
            <render_engine>ogre2</render_engine>
        </plugin>



        <!-- Here we specify anything related to the GUI of Gazebo -->
        <gui fullscreen="0">
            
            <!-- They are responsible for displaying the 3D scene of our world -->
            <!-- 3D scene -->
            <plugin filename="MinimalScene" name="3D View">
            <gz-gui>
                <title>3D View</title>
                <property type="bool" key="showTitleBar">false</property>
                <property type="string" key="state">docked</property>
            </gz-gui>

            <engine>ogre2</engine>
            <scene>scene</scene>
            <ambient_light>0.4 0.4 0.4</ambient_light>
            <background_color>0.8 0.8 0.8</background_color>
            <camera_pose>-6 0 6 0 0.5 0</camera_pose>
            <camera_clip>
                <near>0.25</near>
                <far>25000</far>
            </camera_clip>
            </plugin>
            <plugin filename="GzSceneManager" name="Scene Manager">
            <gz-gui>
                <property key="resizable" type="bool">false</property>
                <property key="width" type="double">5</property>
                <property key="height" type="double">5</property>
                <property key="state" type="string">floating</property>
                <property key="showTitleBar" type="bool">false</property>
            </gz-gui>
            </plugin>

            <!-- World control -->
            <!-- This plugin is responsible for controlling the world, for aspects like, pause, play and even publish in a topic -->
            <plugin filename="WorldControl" name="World control">
                <gz-gui>
                    <title>World control</title>
                    <property type="bool" key="showTitleBar">false</property>
                    <property type="bool" key="resizable">false</property>
                    <property type="double" key="height">72</property>
                    <property type="double" key="width">121</property>
                    <property type="double" key="z">1</property>

                    <property type="string" key="state">floating</property>
                    <anchors target="3D View">
                    <line own="left" target="left"/>
                    <line own="bottom" target="bottom"/>
                    </anchors>
                </gz-gui>

                <play_pause>true</play_pause>
                <step>true</step>
                <start_paused>true</start_paused>
                <service>/world/world_demo/control</service>
                <stats_topic>/world/world_demo/stats</stats_topic>
            </plugin>

            <!-- World statistics -->
            <!-- This plugin is responsible for displaying the world statistics -->
            <plugin filename="WorldStats" name="World stats">
                <gz-gui>
                    <title>World stats</title>
                    <property type="bool" key="showTitleBar">false</property>
                    <property type="bool" key="resizable">false</property>
                    <property type="double" key="height">110</property>
                    <property type="double" key="width">290</property>
                    <property type="double" key="z">1</property>

                    <property type="string" key="state">floating</property>
                    <anchors target="3D View">
                    <line own="right" target="right"/>
                    <line own="bottom" target="bottom"/>
                    </anchors>
                </gz-gui>

                <sim_time>true</sim_time>
                <real_time>true</real_time>
                <real_time_factor>true</real_time_factor>
                <iterations>true</iterations>
                <topic>/world/world_demo/stats</topic>
            </plugin>

        </gui>



        <light type="directional" name="sun">
            <cast_shadows>true</cast_shadows>
            <pose>0 0 10 0 0 0</pose>
            <diffuse>0.8 0.8 0.8 1</diffuse>
            <specular>0.2 0.2 0.2 1</specular>
            <attenuation>
                <range>1000</range>
                <constant>0.9</constant>
                <linear>0.01</linear>
                <quadratic>0.001</quadratic>
            </attenuation>
            <direction>-0.5 0.1 -0.9</direction>
        </light>

        <model name="ground_plane">
            <static>true</static>
            <link name="link">
                <collision name="collision">
                <geometry>
                    <plane>
                    <normal>0 0 1</normal>
                    </plane>
                </geometry>
                </collision>
                <visual name="visual">
                <geometry>
                    <plane>
                    <normal>0 0 1</normal>
                    <size>100 100</size>
                    </plane>
                </geometry>
                <material>
                    <ambient>0.8 0.8 0.8 1</ambient>
                    <diffuse>0.8 0.8 0.8 1</diffuse>
                    <specular>0.8 0.8 0.8 1</specular>
                </material>
                </visual>
            </link>
        </model>

        <!-- Defining the model that we are adding into the scene, that in this case it will be a car -->
        <!--* CAR MODEL  -->
        <model name="robot">
        <self_collide>true</self_collide>
        <pose>0 0 0.35 0 0 0</pose>
        <include merge="true">
            <uri>file:///home/leticia/ros2_ws/src/tutorial_simulacao/simulation/robot.sdf</uri>
        </include>

        </model>


        <!--* Moving Forward-->
        <!-- Enable commands from the keyboard  -->
        <plugin filename="gz-sim-triggered-publisher-system"
                name="gz::sim::systems::TriggeredPublisher">
            <input type="gz.msgs.Int32" topic="/keyboard/keypress">
                <match field="data">16777235</match>
            </input>
            <output type="gz.msgs.Twist" topic="/cmd_vel">
                linear: {x: 0.5}, angular: {z: 0.0}
            </output>
        </plugin>

        <!--* Moving Backwards-->
        <!-- Enable commands from the keyboard  -->
        <plugin filename="gz-sim-triggered-publisher-system"
                name="gz::sim::systems::TriggeredPublisher">
            <input type="gz.msgs.Int32" topic="/keyboard/keypress">
                <match field="data">16777237</match>
            </input>
            <output type="gz.msgs.Twist" topic="/cmd_vel">
                linear: {x: -0.5}, angular: {z: 0.0}
            </output>
        </plugin>

        <!--* Moving Right-->
        <!-- Enable commands from the keyboard  -->
        <plugin filename="gz-sim-triggered-publisher-system"
                name="gz::sim::systems::TriggeredPublisher">
            <input type="gz.msgs.Int32" topic="/keyboard/keypress">
                <match field="data">16777236</match>
            </input>
            <output type="gz.msgs.Twist" topic="/cmd_vel">
                linear: {x: 0.0}, angular: {z: -0.5}
            </output>
        </plugin>

        
        <!--* Moving Left-->
        <!-- Enable commands from the keyboard  -->
        <plugin filename="gz-sim-triggered-publisher-system"
                name="gz::sim::systems::TriggeredPublisher">
            <input type="gz.msgs.Int32" topic="/keyboard/keypress">
                <match field="data">16777234</match>
            </input>
            <output type="gz.msgs.Twist" topic="/cmd_vel">
                linear: {x: 0.0}, angular: {z: 0.5}
            </output>
        </plugin>

        <!-- Add a wall in the simulation  -->
        <model name='wall'>
            <static>true</static>
            <pose>5 0 0 0 0 0</pose><!--pose relative to the world-->
            <link name='box'>
                <visual name='visual'>
                    <geometry>
                        <box>
                            <size>0.5 10.0 2.0</size>
                        </box>
                    </geometry>
                    <!--let's add color to our link-->
                    <material>
                        <ambient>0.0 0.0 1.0 1</ambient>
                        <diffuse>0.0 0.0 1.0 1</diffuse>
                        <specular>0.0 0.0 1.0 1</specular>
                    </material>
                </visual>
                <collision name='collision'>
                    <geometry>
                        <box>
                            <size>0.5 10.0 2.0</size>
                        </box>
                    </geometry>
                </collision>

                <!-- Add the sensor in the wall -->
                <sensor name='sensor_contact' type='contact'>
                    <contact>
                        <collision>collision</collision>
                    </contact>
                </sensor>
            </link>

            <!-- The TouchPlugin will publish (send) a message when the wall has been touched -->
            <plugin filename="gz-sim-touchplugin-system"
                    name="gz::sim::systems::TouchPlugin">
                <target>vehicle_blue</target>
                <namespace>wall</namespace>
                <time>0.001</time>
                <enabled>true</enabled>
            </plugin>
        </model>

            
    </world>


</sdf>